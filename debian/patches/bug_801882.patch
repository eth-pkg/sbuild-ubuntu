commit 6456b3da1bf7f3e68b08f62d5d0cb33f4d8caea2
Author: Johannes 'josch' Schauer <josch@mister-muffin.de>
Date:   Fri Oct 16 07:17:29 2015 +0200

    Make the results of building sbuild itself equal across different architectures (closes: #801882)
    
     - tools/sbuild-dumpconfig: extend the handling of IGNORE_DEFAULT to
       still print the variable name but not the value
     - man/defs.man.in: do not add build system specific information into
       the man pages
     - lib/Sbuild/ConfBase.pm: add IGNORE_DEFAULT to build_arch and
       host_arch so that the architecture of the build system does not spill
       into the created binaries
     - lib/Buildd/ClientConf.pm: add IGNORE_DEFAULT to
       wanna_build_built_architecture for the same reason as above and to
       wanna_build_db_user so that the username of the user building sbuild
       does not spill into the created binaries

diff --git a/lib/Buildd/ClientConf.pm b/lib/Buildd/ClientConf.pm
index 07613db..e38eb7c 100644
--- a/lib/Buildd/ClientConf.pm
+++ b/lib/Buildd/ClientConf.pm
@@ -152,6 +152,10 @@ sub setup ($) {
 	    VARNAME => 'wanna_build_db_user',
 	    GROUP => 'wanna-build client',
 	    DEFAULT => $conf->get('USERNAME'),
+	    # arch:all packages must not differ depending on which user is
+	    # building the source package, so don't show the default for
+	    # example config and man page generation
+	    IGNORE_DEFAULT => 1,
 	    HELP => 'Database user'
 	},
 	'BUILT_ARCHITECTURE'			=> {
@@ -159,6 +163,11 @@ sub setup ($) {
 	    VARNAME => 'wanna_build_built_architecture',
 	    GROUP => 'wanna-build client',
 	    DEFAULT => $arch,
+	    # the $native_arch is different depending on the machine where
+	    # sbuild is built but arch:all packages must not differ depending on
+	    # the architecture they are built on, so don't show the default for
+	    # example config and man page generation
+	    IGNORE_DEFAULT => 1,
 	    HELP => 'Architecture for database'
 	});
 
diff --git a/lib/Sbuild/ConfBase.pm b/lib/Sbuild/ConfBase.pm
index d7640ba..612ba5b 100644
--- a/lib/Sbuild/ConfBase.pm
+++ b/lib/Sbuild/ConfBase.pm
@@ -169,6 +169,11 @@ sub init_allowed_keys {
 	    VARNAME => 'host_arch',
 	    GROUP => 'Build options',
 	    DEFAULT => $native_arch,
+	    # the $native_arch is different depending on the machine where
+	    # sbuild is built but arch:all packages must not differ depending on
+	    # the architecture they are built on, so don't show the default for
+	    # example config and man page generation
+	    IGNORE_DEFAULT => 1,
 	    HELP => 'Host architecture (Arch we are building for)'
 	},
 	'BUILD_ARCH'				=> {
@@ -176,6 +181,11 @@ sub init_allowed_keys {
 	    VARNAME => 'build_arch',
 	    GROUP => 'Build options',
 	    DEFAULT => $native_arch,
+	    # the $native_arch is different depending on the machine where
+	    # sbuild is built but arch:all packages must not differ depending on
+	    # the architecture they are built on, so don't show the default for
+	    # example config and man page generation
+	    IGNORE_DEFAULT => 1,
 	    HELP => 'Build architecture (Arch we are building on).'
 	},
 	'BUILD_PROFILES'        => {
diff --git a/man/defs.man.in b/man/defs.man.in
index 55aafd1..c553ecc 100644
--- a/man/defs.man.in
+++ b/man/defs.man.in
@@ -8,15 +8,6 @@
 .ds SBUILD_SYSCONF_DIR @SBUILD_SYSCONF_DIR@
 .ds WANNA_BUILD_LIBEXEC_DIR @WANNA_BUILD_LIBEXEC_DIR@
 .ds SBUILD_LIBEXEC_DIR @SBUILD_LIBEXEC_DIR@
-.ds PLATFORM @PLATFORM@
-.ds host_os @host_os@
-.ds host_vendor @host_vendor@
-.ds host_cpu @host_cpu@
-.ds host @host@
-.ds build_os @build_os@
-.ds build_vendor @build_vendor@
-.ds build_cpu @build_cpu@
-.ds build @build@
 .ds RELEASE_DATE @RELEASE_DATE@
 .ds VERSION @VERSION@
 .ds PACKAGE @PACKAGE@
diff --git a/tools/sbuild-dumpconfig b/tools/sbuild-dumpconfig
index bdf493b..bda5a34 100755
--- a/tools/sbuild-dumpconfig
+++ b/tools/sbuild-dumpconfig
@@ -116,9 +116,13 @@ foreach my $group (@groups) {
 			print "#    $line\n";
 		    }
 		}
-		print wrap("#", "#", Data::Dumper->Dump([$default],
-							["$varname"]))
-		    if (!$ignore_default);
+		if ($ignore_default) {
+			print wrap("#", "#", "$varname = ...;");
+			print("\n");
+		} else {
+			print wrap("#", "#", Data::Dumper->Dump([$default],
+							["$varname"]));
+		}
 		print("\n");
 	    } elsif ($output eq "man") {
 		print ".TP\n";
@@ -139,7 +143,13 @@ foreach my $group (@groups) {
 		    }
 		    print ".RE\n";
 		}
-		if (!$ignore_default) {
+		if ($ignore_default) {
+		    print ".PP\n";
+		    print ".RS\n";
+			print "\\f[CR]$varname = ...;\\fP\n";
+			print ".br\n";
+		    print ".RE\n";
+		} else {
 		    print ".IP\n";
 		    print "Default:\n";
 		    print ".PP\n";
