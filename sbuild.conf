#
# /etc/sbuild.conf: global sbuild configurations that are
# supposed to be changed only by the sbuild author, not by the user.
# Of course you're free to override values here in /etc/sbuild.conf.local
#
# commented out stuff are defaults
#
# $Id: sbuild.conf 470 2006-03-11 16:42:44Z rleigh $
#

# Name of log sender
$mailfrom = "Source Builder <sbuild>";

# File with the source dependencies
$source_dependencies = "/var/lib/sbuild/source-dependencies";

# Directory for writing build logs to
#$log_dir = "$HOME/logs";

# Name of a database for logging package build times (optional, no database
# is written if empty)
$avg_time_db = "/var/lib/sbuild/avg-build-times";

# Name of a database for logging package space requirement (optional)
$avg_space_db = "/var/lib/sbuild/avg-build-space";

# Name for dir for source dependency lock files
$srcdep_lock_dir = "/var/lib/sbuild/srcdep-lock";

# Chroot behaviour; possible values are "split" (apt and dpkg are run
# from the host system) and "schroot" (all package operations are done in
# the chroot with schroot, but the chroot must allow networking)
#$chroot_mode = "split";

# When to purge the build directory afterwards; possible values are "never",
# "successful", and "always"
#$purge_build_directory="successful";

# PGP-related option to pass to dpkg-buildpackage. Usually neither .dsc
# nor .changes files shall be signed automatically.
#$pgp_options = "-us -uc";

# After that time (in minutes) of inactivity a build is terminated. Activity
# is measured by output to the log file.
$stalled_pkg_timeout = 150;

# Some packages may exceed the general timeout (e.g. redirecting output to
# a file) and need a different timeout. Below are some examples.
#%individual_stalled_pkg_timeout = (
#	smalleiffel => 300,
#	jade => 300,
#	atlas => 300,
#	glibc => 1000,
#	xfree86 => 1000,
#	'gcc-3.3' => 300,
#	kwave => 600
#);

# Binaries for which the access time is controlled if they're not listed as
# source dependencies (note: /usr/bin is added if executable name doesn't
# start with '/')
#
# Most buildds run with clean chroots atm, so the default list is now empty.
%watches = ();

# Ignore watches on the following packages if the package doesn't have its own
# build dependencies in the .dsc
@ignore_watches_no_build_deps = qw();

# If a source dependency is an alternative that is provided by more than one
# package, this list can select which one will be installed (if nothing is
# defined, a random provider will be used)
%alternatives = (
	"info-browser"			=> "info",
	"httpd"				=> "apache",
	"postscript-viewer"		=> "ghostview",
	"postscript-preview"		=> "psutils",
	"www-browser"			=> "lynx",
	"awk"				=> "gawk",
	"c-shell"			=> "tcsh",
	"wordlist"			=> "wenglish",
	"tclsh"				=> "tcl8.4",
	"wish"				=> "tk8.4",
	"c-compiler"			=> "gcc",
	"fortran77-compiler"		=> "g77",
	"java-compiler"			=> "jikes",
	"libc-dev"			=> "libc6-dev",
	"libgl-dev"			=> "xlibmesa-gl-dev",
	"libglu-dev"			=> "xlibmesa-glu-dev",
	"libncurses-dev"		=> "libncurses5-dev",
	"libz-dev"			=> "zlib1g-dev",
	"libg++-dev"			=> "libstdc++6-4.0-dev",
	"emacsen"			=> "emacs21",
	"mail-transport-agent"		=> "ssmtp",
	"mail-reader"			=> "mailx",
	"news-transport-system"		=> "inn",
	"news-reader"			=> "nn",
	"xserver"			=> "xvfb",
	"mysql-dev"			=> "libmysqlclient-dev",
	"giflib-dev"			=> "libungif4-dev",
	"freetype2-dev"			=> "libttf-dev"
);

@no_auto_upgrade = qw(dpkg apt bash libc6 libc6-dev dpkg-dev);

# This command is run with the dpkg-buildpackage command line passed to it
# (in the chroot, if doing a chrooted build).  It is used by the sparc buildd
# (which is sparc64) to call the wrapper script that sets the environment to
# sparc (32-bit).  It could be used for other build environment setup scripts
#
#$build_env_cmnd = "";

# Some programs called by sbuild:

#$mailprog = "/usr/sbin/sendmail";
#$dpkg = "/usr/bin/dpkg";
#$sudo = "/usr/bin/sudo";
#$schroot = "/usr/bin/schroot"
#$schroot_options = "-q"
# change to /usr/bin/sudo if you don't have fakeroot
#$fakeroot = "/usr/bin/fakeroot";
#$apt_get = "/usr/bin/apt-get";
#$dpkg_source = "/usr/bin/dpkg-source";

# don't remove this, Perl needs it:
1;
