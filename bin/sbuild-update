#!/usr/bin/perl -w
#
# Copyright Â© 2006-2008 Roger Leigh <rleigh@debian.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
#######################################################################

use strict;
use warnings;

use Sbuild::ChrootSetup qw(update upgrade distupgrade);

package Conf;

use Sbuild::Conf;

BEGIN {
    use Exporter ();
    our (@ISA, @EXPORT);

    @ISA = qw(Exporter Sbuild::Conf);

    @EXPORT = qw();
}

sub init_allowed_keys {
    my $self = shift;

    $self->SUPER::init_allowed_keys();

    my %update_keys = (
	'UPDATE'				=> {
	    DEFAULT => 0
	},
	'UPGRADE'				=> {
	    DEFAULT => 0
	},
	'DISTUPGRADE'				=> {
	    DEFAULT => 0
	},
    );

    $self->set_allowed_keys(\%update_keys);
}

package Options;

use Sbuild::OptionsBase;
use Sbuild::Conf;

BEGIN {
    use Exporter ();
    our (@ISA, @EXPORT);

    @ISA = qw(Exporter Sbuild::OptionsBase);

    @EXPORT = qw();
}

sub set_options {
    my $self = shift;

    $self->add_options(
	"update|u" => sub {
	    $self->set_conf('UPDATE', 1);
	},
	"upgrade|g" => sub {
	    $self->set_conf('UPGRADE', 1);
	},
	"dist-upgrade|d" => sub {
	    $self->set_conf('DISTUPGRADE', 1);
	});
}

package main;

use Getopt::Long;
use Sbuild qw(help_text version_text usage_error);
use Sbuild::Utility qw(setup cleanup);

my $conf = Conf->new();
exit 1 if !defined($conf);
my $options = Options->new($conf, "sbuild-update", "1");
exit 1 if !defined($options);
$conf->check_group_membership();

if ( ! $conf->get('UPDATE') && ! $conf->get('UPGRADE') &&
    ! $conf->get('DISTUPGRADE') ) {
    my $msg = "$0 will perform apt-get command 'update' now, however this ";
    $msg .= "may change at a later revision.\n";
    print "$msg";
    $conf->set('UPDATE', 1);
}

usage_error("sbuild-update", "Incorrect number of options") if (@ARGV < 1);

foreach (@ARGV) {

    my $chroot = Sbuild::Utility::get_dist($_);

    my $session = setup($ARGV[0], $conf) or die "Chroot setup failed";

    if ($conf->get('UPDATE')) {
	print "Performing update.\n";
	my $status = update($session, $conf);
	$status >>= 8;
	if ($status) {
	    die "Exiting from update with status $status.\n";
	}
    }

    if ($conf->get('UPGRADE')) {
	print "Performing upgrade.\n";
	my $status = upgrade($session, $conf);
	$status >>= 8;
	if ($status) {
	    die "Exiting from upgrade with status $status.\n";
	}
    }

    if ($conf->get('DISTUPGRADE')) {
	print "Performing dist-upgrade.\n";
	my $status = distupgrade($session, $conf);
	$status >>= 8;
	if ($status) {
	    die "Exiting from distupgrade with status $status.\n";
	}
    }

    cleanup($conf);
}

exit 0;
